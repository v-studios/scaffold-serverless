<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Testing</title>
    <link rel="stylesheet" href="_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="_static/pygments.css" type="text/css" /> 
  </head>
  <body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="testing">
<h1>Testing</h1>
<p>We prefer <a class="reference external" href="https://docs.pytest.org/en/latest/">pytest</a><span class="link-target"> [https://docs.pytest.org/en/latest/]</span> to the
built-in unit tests as they’re shorter to write and have more
capabilities.  It’s installed as part of the <a class="reference external" href="requirements.txt">requirements.txt</a> file.</p>
<p>You should write your tests, organized into different <code class="docutils literal"><span class="pre">test_\*.py</span></code>
or <code class="docutils literal"><span class="pre">*_test.py</span></code> files under the <code class="docutils literal"><span class="pre">tests/</span></code> directory.  For example,
you might have <code class="docutils literal"><span class="pre">test_apig.py</span></code>, <code class="docutils literal"><span class="pre">test_dynamodb.py</span></code>,
<code class="docutils literal"><span class="pre">test_authentication.py</span></code> and so on.  You can use this for unit tests
or integration tests.</p>
<p>For info on writing tests, see the <cite>pytest</cite> docs.</p>
<p>To run the tests, with virtualenv activated, in the top level
directory, do:</p>
<div class="highlight-default"><div class="highlight"><pre><span></span><span class="n">make</span> <span class="n">tests</span>
</pre></div>
</div>
<p>We also installed <code class="docutils literal"><span class="pre">pytest-cov</span></code> to measure code test coverage. You
can run that with:</p>
<div class="highlight-default"><div class="highlight"><pre><span></span><span class="n">make</span> <span class="n">coverage</span>
</pre></div>
</div>
<p>It’s settings are configured in <code class="docutils literal"><span class="pre">.coveragerc</span></code>.  It stores state
information in <code class="docutils literal"><span class="pre">.coverage</span></code> and output a HTML report under
<code class="docutils literal"><span class="pre">htmlcov/</span></code>; don’t check these into source control (these are
gitignored here).</p>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>